import streamlit as st
import openai
from dotenv import load_dotenv
import os
from chatbot import generate_chat_response  
from planmytrip import plan_my_trip
from conversion import get_conversion
from glowup import glowing
from planmytrip import generate_itinerary


# Load environment variables from .env file
load_dotenv()

# Set your OpenAI API key
openai.api_key = st.secrets["openai"]["api_key"]

# Set page configuration
st.set_page_config(page_title="Trippin", layout="wide")

# Initialize session state for active tab
if "active_tab" not in st.session_state:
    st.session_state["active_tab"] = "Home"  # Default tab

# Function to switch tabs
def switch_tab(tab_name):
    st.session_state["active_tab"] = tab_name
    st.rerun()  # Refresh UI to reflect change

st.markdown(
    """
    <style>
        .block-container {
            padding-top: 1rem !important; /* Adjust the top padding */
            padding-left: 6rem;
            padding-right: 6rem;
        }
    </style>
    """,
    unsafe_allow_html=True
)

# Custom CSS for aligning navigation buttons to the right & styling the "Get Started" button
st.markdown(
    """
    <style>

        button[kind="primary"] {
            background-color: #FF7F9F;
            border: none;
        }

        button[kind="primary"]:hover {
            background-color: #ff5c8a;  
            cursor: pointer;  
        }

        button[kind="secondary"] {
            background-color: none;
            border: none;
            color: #FF7F9F
        }

        button[kind="secondary"]:hover {
            color: white;  
            background-color: #FF7F9F;  
            cursor: pointer;
        }

    </style>
    """,
    unsafe_allow_html=True
)

# Navigation Bar (properly aligned to the right)
st.markdown('<div class="nav-container">', unsafe_allow_html=True)
col1, col2, col3, col4, col5, col6= st.columns([6,1,1.3,1.7,1,1])  # Push buttons to the right

st.markdown(
    """
<style>
button[title="View fullscreen"] {
    display: none;
}
</style>
""",
    unsafe_allow_html=True,
)
with col1:
    st.image("assets/trippin_logo.png", width=220)
with col2:
    if st.button("Home", key="home_tab",type="secondary"):
        switch_tab("Home")
with col3:
    if st.button("Plan My Trip", key="trip_tab"):
        switch_tab("Plan My Trip")
with col4:
    if st.button("Currency Converter", key="convert_tab"):
        switch_tab("Convert")
with col5:
    if st.button("Glow Up", key="glowup_tab"):
        switch_tab("Glow Up")
with col6:
    if st.button("Chat", key="chat_tab"):
        switch_tab("Chat")
st.markdown('</div>', unsafe_allow_html=True)

# Render content based on the active tab
if st.session_state["active_tab"] == "Home":
    st.markdown(
    """
    <h1 style="text-align: center;">
        Say Goodbye to Travel Hassles, Hello to <span style="color: #FF7F9F;">Trippin AI!</span>
    </h1>
    """,
    unsafe_allow_html=True
    )
    st.write("")
    col1, col2, col3 = st.columns([1,9,3.4])
    with col2:
        st.markdown(
    """
    <p style="font-size:18px;">We create customized itineraries, provide currency conversion, and answer all your travel questions. Need help?</p>
    """,
    unsafe_allow_html=True
    )

    with col3:
    
        if st.button("Chat with our chatbot", type="secondary"):
            switch_tab("Chat")

    st.markdown(
    """
    <p style="text-align: center; font-size:18px;">Can't decide where to go? No worries, we've got you covered! Explore unlimited travel inspirations with personalized itineraries ready just for you!</p>
    """,
    unsafe_allow_html=True
    )

    st.write("")
    
    
    col1, col2, col3, col4 = st.columns([2.5, 2, 2, 2])

    with col2:  # Center column
        if st.button("‚úçüèª Create An Itinerary", key="get_started", type="primary"):
            switch_tab("Plan My Trip")  
  
    with col3:
        user_preferences = {
                "destination": "random location",
                "travel_date": "none",
                "num_days": "reasonable number of days",
                "budget": "reasonable budget",
                "companions": "either solo, family, friends or couple",
                "activities": "any activities",
                "dietary_options": "none",
                "additional_requirements": "none"
        }
        if st.button("üí≠ Inspire me where to go",type="primary"):
            st.session_state["destination"] = "random location"
            st.session_state["itinerary"] = generate_itinerary(user_preferences)
            st.session_state["active_tab"] = "Itinerary"
            st.rerun()

        
    st.write("")
    st.write("")
    st.subheader("Tourist Recommendations")

    trip_col1, trip_col2, trip_col3 = st.columns(3)

    if "selected_trip" not in st.session_state:
        st.session_state.selected_trip = None

    # Recommended Trip 1
    with trip_col1:
        st.image("assets/bali.jpg", use_container_width=True)
        st.markdown("### Bali, Indonesia")
        st.write("Experience breathtaking beaches, lush jungles, and vibrant culture.")
        if st.button("View", key="bali", type="primary"):
            st.session_state.selected_trip = "Bali"

    # Recommended Trip 2
    with trip_col2:
        st.image("assets/paris.webp", use_container_width=True)
        st.markdown("### Paris, France")
        st.write("Visit the City of Love and explore its iconic landmarks and cafes.")
        if st.button("View", key="paris",type="primary"):
            st.session_state.selected_trip = "Paris"

    # Recommended Trip 3
    with trip_col3:
        st.image("assets/tokyo.webp", use_container_width=True)
        st.markdown("### Tokyo, Japan")
        st.write("Discover a mix of futuristic cityscapes and traditional temples.")
        if st.button("View", key="tokyo", type="primary"):
            st.session_state.selected_trip = "Tokyo"

    st.markdown("<hr>", unsafe_allow_html=True)  # Add a separator

    travel_guide = {
        "Bali": {
            "days": "7-10 days",
            "best_season": "Dry season (April - October)",
            "cheapest_month": "February",
            "attractions": [
                "Uluwatu Temple ‚Äì Stunning cliffside views.",
                "Tegallalang Rice Terraces ‚Äì Breathtaking landscapes.",
                "Seminyak Beach ‚Äì Perfect for sunset lovers.",
                "Mount Batur ‚Äì Sunrise trek for adventure seekers.",
                "Nusa Penida ‚Äì Spectacular cliffs and beaches."
            ],
            "activities": [
                "Surfing at Kuta Beach.",
                "Snorkeling or diving in Nusa Lembongan.",
                "Balinese cooking class.",
                "Traditional spa and wellness retreat.",
                "Exploring Ubud‚Äôs Monkey Forest."
            ],
            "restaurants": [
                "Locavore ‚Äì Award-winning fine dining.",
                "Naughty Nuri‚Äôs ‚Äì Famous for ribs and cocktails.",
                "Bambu ‚Äì Authentic Indonesian cuisine.",
                "Sardine ‚Äì Great seafood with rice paddy views."
            ],
            "festivals": [
                "Nyepi (March) ‚Äì Balinese New Year, a day of silence.",
                "Galungan & Kuningan ‚Äì Celebrations of good over evil.",
                "Bali Arts Festival (June - July) ‚Äì Traditional performances."
            ]
        },
        "Paris": {
            "days": "5-7 days",
            "best_season": "Spring (April - June) & Fall (September - November)",
            "cheapest_month": "January",
            "attractions": [
                "Eiffel Tower ‚Äì A must-see iconic landmark.",
                "Louvre Museum ‚Äì Home of the Mona Lisa.",
                "Champs-√âlys√©es ‚Äì Perfect for shopping and cafes.",
                "Seine River Cruise ‚Äì Romantic boat tour.",
                "Sacr√©-C≈ìur ‚Äì Stunning views from Montmartre."
            ],
            "activities": [
                "Visit art museums like Mus√©e d'Orsay.",
                "Enjoy a picnic at Jardin du Luxembourg.",
                "Take a day trip to the Palace of Versailles.",
                "Explore Parisian caf√©s and bakeries.",
                "Watch a cabaret show at Moulin Rouge."
            ],
            "restaurants": [
                "Le Meurice ‚Äì Michelin-starred luxury dining.",
                "Le Petit Cambodge ‚Äì Amazing local food.",
                "L‚ÄôAmbroisie ‚Äì A 3-star Michelin experience.",
                "Bouillon Pigalle ‚Äì Affordable and delicious French cuisine."
            ],
            "festivals": [
                "Bastille Day (July 14) ‚Äì Fireworks & celebrations.",
                "Paris Fashion Week (March & September).",
                "Nuit Blanche (October) ‚Äì All-night art festival."
            ]
        },
        "Tokyo": {
            "days": "7-10 days",
            "best_season": "Spring (March - May) & Fall (September - November)",
            "cheapest_month": "February",
            "attractions": [
                "Shibuya Crossing ‚Äì The world‚Äôs busiest intersection.",
                "Senso-ji Temple ‚Äì Tokyo‚Äôs most famous temple.",
                "Akihabara ‚Äì A paradise for anime and gaming lovers.",
                "Shinjuku Gyoen ‚Äì Beautiful park, great for cherry blossoms.",
                "Tsukiji Outer Market ‚Äì Fresh sushi experience."
            ],
            "activities": [
                "Explore teamLab Planets Tokyo (digital art museum).",
                "Watch a sumo wrestling match.",
                "Shop for tech and anime merchandise in Akihabara.",
                "Visit a themed caf√© (Pokemon Caf√©, Robot Restaurant, etc.).",
                "Experience a traditional tea ceremony."
            ],
            "restaurants": [
                "Sukiyabashi Jiro ‚Äì World-famous sushi restaurant.",
                "Ichiran Ramen ‚Äì Best solo ramen experience.",
                "Gonpachi ‚Äì Known as 'The Kill Bill' restaurant.",
                "Narisawa ‚Äì Innovative fine dining experience."
            ],
            "festivals": [
                "Sakura Festivals (March - April) ‚Äì Cherry blossom season.",
                "Sumidagawa Fireworks Festival (July).",
                "Tokyo Game Show (September) ‚Äì A must for gamers.",
                "Shichi-Go-San (November) ‚Äì Celebration for children."
            ]
        }
    }

    if st.session_state.selected_trip:
        st.subheader(f"üåç {st.session_state.selected_trip} Travel Guide")
        
        st.markdown(f"**üóìÔ∏è Ideal Trip Duration:** {travel_guide[st.session_state.selected_trip]['days']}")
        st.markdown(f"**üå§Ô∏è Best Season to Visit:** {travel_guide[st.session_state.selected_trip]['best_season']}")
        st.markdown(f"**‚úàÔ∏è Cheapest Month for Flights:** {travel_guide[st.session_state.selected_trip]['cheapest_month']}")

        col1, col2 = st.columns(2)

        with col1:
            st.markdown("### üèõÔ∏è Top Attractions:")
            for attraction in travel_guide[st.session_state.selected_trip]["attractions"]:
                st.write(f"- {attraction}")
            
            st.markdown("### üé≠ Best Activities:")
            for activity in travel_guide[st.session_state.selected_trip]["activities"]:
                st.write(f"- {activity}")

        with col2:
            st.markdown("### üçΩÔ∏è Must-Try Restaurants:")
            for restaurant in travel_guide[st.session_state.selected_trip]["restaurants"]:
                st.write(f"- {restaurant}")
            
            st.markdown("### üéâ Festivals & Events:")
            for festival in travel_guide[st.session_state.selected_trip]["festivals"]:
                st.write(f"- {festival}")

        st.markdown("Safe travels! üåç‚ú®")
        st.markdown("<hr>", unsafe_allow_html=True)  # Add a separator
        
    st.subheader("Travel FAQs ")

    st.write("Find answers to common travel questions below! Click on any category to expand.")

    # Visa & Passport FAQs
    with st.expander("üõÇ Visa & Passport FAQs"):
        st.write("**Q: How do I check if I need a visa for my destination?**")
        st.write("üëâ You can check visa requirements on official embassy websites or use [iVisa](https://www.ivisa.com/) for quick reference.")

        st.write("**Q: How long should my passport be valid for travel?**")
        st.write("üëâ Many countries require at least **6 months of validity** beyond your departure date.")

        st.write("**Q: Do I need a transit visa if I have a layover?**")
        st.write("üëâ Some countries require transit visas if you **leave the airport**, so check with the airline or embassy.")

    # Money & Currency FAQs
    with st.expander("üí∞ Budget & Currency FAQs"):
        st.write("**Q: Should I exchange money before traveling?**")
        st.write("üëâ It‚Äôs usually cheaper to **withdraw cash from ATMs** at your destination rather than exchange money at airports.")

        st.write("**Q: What is the best way to avoid foreign transaction fees?**")
        st.write("üëâ Use a **no-fee travel credit card** or **withdraw larger amounts from ATMs** to reduce fees.")

    # Flight & Airport FAQs
    with st.expander("‚úàÔ∏è Flight & Airport FAQs"):
        st.write("**Q: When is the best time to book a cheap flight?**")
        st.write("üëâ **Tuesdays and Wednesdays** tend to have the cheapest fares, and booking **2-3 months in advance** is ideal.")

        st.write("**Q: What items are restricted in carry-on luggage?**")
        st.write("üëâ No liquids over **100ml**, sharp objects, aerosols, or batteries exceeding airline limits.")

    # Accommodation FAQs
    with st.expander("üè® Accommodation FAQs"):
        st.write("**Q: Should I book hotels in advance or last-minute?**")
        st.write("üëâ For peak seasons, book early. Last-minute deals can be cheaper, but availability is risky.")

        st.write("**Q: Are Airbnb rentals better than hotels?**")
        st.write("üëâ **Hotels** offer **security & services**, while **Airbnb** provides **local experiences & lower costs** for groups.")

    # Tech & Connectivity FAQs
    with st.expander("üì± Tech & Connectivity FAQs"):
        st.write("**Q: What‚Äôs the best way to get internet while traveling?**")
        st.write("üëâ Buy a **local SIM card, eSIM, or use portable WiFi**.")

        st.write("**Q: Can I use my phone abroad?**")
        st.write("üëâ Check if your carrier offers **international roaming**, or **unlock your phone** for a local SIM.")

    # Health & Safety FAQs
    with st.expander("üöë Health & Safety FAQs"):
        st.write("**Q: Do I need travel insurance?**")
        st.write("üëâ Yes! Travel insurance covers **medical emergencies, cancellations, and lost luggage**.")

        st.write("**Q: Can I drink tap water abroad?**")
        st.write("üëâ **Research first!** In some countries, only bottled or filtered water is safe.")

    # Sightseeing & Activities FAQs
    with st.expander("üó∫Ô∏è Sightseeing & Activities FAQs"):
        st.write("**Q: Should I book tours in advance or on arrival?**")
        st.write("üëâ **Popular tours (museums, safaris, adventure activities)** should be booked early to avoid missing out.")

        st.write("**Q: What‚Äôs the best way to avoid crowds at attractions?**")
        st.write("üëâ **Visit early in the morning** or right before closing time.")

    st.write("üîç Need more help? Ask our chatbot for personalized travel advice!")  

elif st.session_state["active_tab"] == "Plan My Trip":
    plan_my_trip()

elif st.session_state["active_tab"] == "Chat":
    st.title("Chat with AI")
    st.write("Ask travel-related questions and get instant recommendations.")
    generate_chat_response()

# streamlit_app.py (excerpt)
elif st.session_state["active_tab"] == "Itinerary":
    from itinerary import display_itinerary  # Import the function
    display_itinerary()  # Call it to render the layout

elif st.session_state["active_tab"] == "Convert":
    get_conversion()

elif st.session_state["active_tab"] == "Glow Up":
    st.title("Give your self-planned itinerary a glow-up")
    st.write("Just paste your itinerary, and we'll help improve it for you.")
    glowing()